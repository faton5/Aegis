[pytest]
# Configuration pytest pour Aegis Bot - Tests automatisés complets
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Options par défaut (simplifiées pour éviter les problèmes)
addopts = -v --tb=short --strict-markers --disable-warnings --asyncio-mode=auto -s --capture=no

# Markers personnalisés pour organiser les tests
markers =
    asyncio: Tests asynchrones (automatiquement détecté)
    slow: Tests lents qui prennent plus de temps à exécuter
    integration: Tests d'intégration entre plusieurs composants
    unit: Tests unitaires isolés
    discord: Tests qui interagissent avec l'API Discord (mocks)
    supabase: Tests qui utilisent Supabase (mocks)
    ui: Tests des composants UI (modals, boutons, vues)
    commands: Tests des commandes slash
    security: Tests de sécurité et validation
    translations: Tests du système de traduction
    config: Tests de configuration et setup

# Configuration asyncio
asyncio_mode = auto

# Filtres d'alerte (désactiver les warnings non critiques)
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::pytest.PytestUnraisableExceptionWarning

# Couverture de code (utilisé avec --cov)
[coverage:run]
source = .
omit = 
    tests/*
    venv/*
    env/*
    __pycache__/*
    .pytest_cache/*
    htmlcov/*
    *.pyc

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.: